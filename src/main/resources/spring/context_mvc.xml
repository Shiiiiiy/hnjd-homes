<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:config/system_config.properties</value>
			</list>
		</property>
	</bean>
	

	<!-- 静态调用spring容器中bean对象工具类 -->
	<bean name="springBeanLocator" class="com.uws.core.util.SpringBeanLocator" lazy-init="false"/>

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:annotation-config />
    <!-- 
    <context:component-scan base-package="com.uws"/>
     -->
	<context:component-scan base-package="com.uws"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
    <!-- Application Message Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" >
        <property name="basename" value="messages/messages"/>
    </bean>
<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值-->
    <bean id="exceptionResolver" class="com.uws.core.spring.MappingExceptionResolver">
        
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">
                    errorpage/dataAccessFailure
                </prop>                
                <prop key="com.uws.security.exception.TokenException">errorpage/tokenMsg</prop>
                <prop key="com.uws.security.exception.PermException">errorpage/errorRight</prop>
            </props>
        </property>
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
	    <property name="defaultErrorView" value="errorpage/warn"></property>  
	    
	    <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception --> 
	    <property name="exceptionAttribute" value="ex"></property>
   
   </bean>
     
  

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>
    <mvc:view-controller path="/" view-name="index"/>
    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <mvc:interceptor>
        	<mvc:mapping path="/**"/>  
        	<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->  
			<bean class="com.uws.security.interceptor.AuthenticationIntercetor">
				<property name="excludedUrls">  
					<list>  
						<value>/login.do</value>  
						<value>/loginauth.do</value>
						<value>/authcode.do</value>
						<value>/toLogin.do</value>
						<value>/**/noSecurity/**</value>
					</list>  
				</property> 
			</bean>
        </mvc:interceptor>
        
        <bean class="com.uws.security.token.TokenValidInterceptor"/>
         
        <mvc:interceptor>
        	<mvc:mapping path="/**"/>  
        	 
			<bean class="com.uws.security.interceptor.MenuAndOperAuthIntercetor">
				<property name="excludedUrls">  
					<list>  
						<value>/login.do</value>  
						<value>/loginauth.do</value>
						<value>/authcode.do</value>
						<value>/toLogin.do</value>
						<value>/**/noSecurity/**</value>
					</list>  
				</property> 
			</bean>
        </mvc:interceptor>
        
        <bean name="openSessionInViewInterceptor"  
				class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">		 
			<property name="sessionFactory" ref="sessionFactory"/>		 
		</bean>
    </mvc:interceptors>

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
     
     <bean id="multipartResolver" class="com.uws.sys.util.BDPCommonsMultipartResolver">
     	<property name="defaultEncoding" value="UTF-8"></property>
     	<property name="maxInMemorySize" value="4096"></property>
     	<property name="maxUploadSize" value="2147483648"></property><!-- 2G -->
     </bean>
     
<!--  
    <bean id="beanValidator" class="org.springmodules.validation.commons.DefaultBeanValidator">
        <property name="validatorFactory" ref="validatorFactory"/>
    </bean>
-->
    <!-- FreeMarker Configurer and View Resolver -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="datetime_format">MM/dd/yyyy</prop>
                <prop key="number_format">0.######</prop>
                <prop key="template_update_delay">0</prop>  
		        <prop key="default_encoding">UTF-8</prop>  
		        <prop key="locale">zh_CN</prop> 
		        <prop key="url_escaping_charset">UTF-8</prop>
		        <prop key="boolean_format">true,false</prop>
		        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="whitespace_stripping">true</prop>
                <!-- 
                <prop key="auto_import">/ftl/spring.ftl as s</prop>
                 -->
            </props>
        </property>
       
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
                <entry key="token" value-ref="token"/>
                <entry key="pageTag" value-ref="pageTag"/>
                <entry key="_sys_title" value="${sys.title}"/>
                <entry key="_prefix_" value="${sys.prefix}"/>
            </map>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <bean id="token" class="com.uws.security.token.TokenDirective"/>
    <bean id="pageTag" class="com.uws.core.page.PageTag"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="rc"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>
    
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册
    -->  
	<bean id="validator"   
	class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
	        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>  
	        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
	        <property name="validationMessageSource" ref="messageSource"/>  
	</bean>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter" />
                <!-- 
                <ref bean="jsonHttpMessageConverter" />
                 -->
            </list>
        </property>
    </bean>
    
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
     <property name = "supportedMediaTypes">    
                     <list>    
                         <value>text/plain;charset=UTF-8</value>    
                     </list>    
                </property>  
    </bean> 
    <!-- 
    <bean id="jsonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json</value>  
            </list>  
        </property>  
    </bean>
     -->
    
    
   
</beans>
